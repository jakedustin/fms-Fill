package DAOs;

import java.sql.*;
import Models.*;

public class UserDAO {
    private Connection conn;

    public UserDAO(Connection conn) {
        this.conn = conn;
    }

    /**
     * Primary function for registering a new user, inserts a generated User object into the database. Accesses
     * AuthenticationTokenDAO to insert that as well.
     *
     * @param user User object generated by RegisterService, will be inserted into the database.
     *
     * @return Returns an authentication token for the new User.
     * @throws DataAccessException
     */
    public AuthenticationToken insert(User user) throws DataAccessException {
        String sql = "INSERT INTO USERS (Username, Password, Email, FirstName, LastName, Gender, PersonID) VALUES(?,?,?,?,?,?,?)";

        try (PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setString(1, user.getUsername());
            stmt.setString(2, user.getPassword());
            stmt.setString(3, user.getEmail());
            stmt.setString(4, user.getFirstName());
            stmt.setString(5, user.getLastName());
            stmt.setString(6, user.getGender());
            stmt.setString(7, user.getPersonID());

            stmt.executeUpdate();

            AuthenticationTokenDAO authenticationTokenDAO = new AuthenticationTokenDAO(conn);
            AuthenticationToken authToken = new AuthenticationToken(user.getUsername());
            authenticationTokenDAO.insert(authToken);

            return authToken;
        } catch (SQLException e) {
            e.printStackTrace();
            if (e.getErrorCode() == 19) {
                throw new DataAccessException("Error: Username already taken by another user");
            }
            throw new DataAccessException("SQLException thrown. Error code " + e.getErrorCode());
        }
    }

    public User find(String username) throws DataAccessException {
        User user;
        String sql = "SELECT * FROM USERS WHERE Username = ?";
        ResultSet rs = null;

        try (PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setString(1, username);
            rs = stmt.executeQuery();

            if (rs.next()) {
                user = new User(
                        rs.getString("Username"),
                        rs.getString("Password"),
                        rs.getString("Email"),
                        rs.getString("FirstName"),
                        rs.getString("LastName"),
                        rs.getString("Gender"),
                        rs.getString("PersonID"));

                return user;
            }
            else {
                throw new DataAccessException("Error: Request property missing or has invalid value");
            }
        } catch (SQLException e) {
            e.printStackTrace();
            throw new DataAccessException("Error: Internal server error");
        }
    }
}
